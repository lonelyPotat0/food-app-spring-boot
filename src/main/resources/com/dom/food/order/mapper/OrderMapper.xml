<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dom.food.order.mapper.OrderMapper">

    <insert id="addToCart" parameterType="hashmap" useGeneratedKeys="true" keyColumn="cart_item_id" keyProperty="cartItemId">
        INSERT into `tbl_cart_item` (
                user_id,
                menu_id,
                quantity,
                increase_price
        )
        VALUES (
                #{userId},
                #{menuId},
                #{quantity},
                #{increasePrice}
        )
    </insert>

    <select id="checkCartItemExists" parameterType="hashmap" resultType="com.dom.food.order.models.CartItemModel"> 
        select 
            cart_item_id as cartItemId,
            quantity
        from `tbl_cart_item`
        where menu_id = #{menuId} and user_id = #{userId}
    </select>

    <select id="getCartItems" parameterType="int" resultType="com.dom.food.order.models.CartItemModel">
        select 
            cart.cart_item_id as cartItemId,
            cart.user_id as userId,
            menu.shop_id as shopId,
            menu.menu_id as menuId,
            menu.category_id as categoryId,
            menu.name as name,
            menu.image as image,
            CASE
                WHEN cart.increase_price = true
                THEN
                    menu.price + (menu.price * 0.05)
                ELSE
                    menu.price
            END AS price,
            <!-- menu.price as price, -->
            cart.quantity as quantity,
            CASE
                WHEN cart.increase_price = true
                THEN
                cart.quantity * (menu.price + (menu.price * 0.05))
                ELSE
                menu.price * cart.quantity
            END AS totalPrice,
            <!-- menu.price * cart.quantity as totalPrice, -->
            cart.create_at as createAt,
            cart.update_at as updateAt

        from `tbl_cart_item` as cart
        inner join `tbl_menu` as menu on menu.menu_id = cart.menu_id
        where cart.user_id = #{userId}
    </select>

    <update id="updateCart" parameterType="hashmap">
        UPDATE `tbl_cart_item`
        <set>
            <if test="quantity != null">quantity = #{quantity},</if>
            <if test="increasePrice != null">increase_price = #{increasePrice},</if>
        </set>
        where cart_item_id = #{cartItemId} and user_id = #{userId}
    </update>


    <delete id="removeFromCart" parameterType="hashmap">
        DELETE from `tbl_cart_item` where cart_item_id = #{cartItemId} and user_id = #{userId}
    </delete>



    <insert id="createOrder" parameterType="hashmap" useGeneratedKeys="true" keyColumn="order_id" keyProperty="orderId"> 
        INSERT into `tbl_order` (
            customer_id,
            delivery_address,
            grand_total,
            processed_by 
        )
        VALUES (
                #{customerId},
                #{deliveryAddress},
                #{grandTotal},
                #{customerId}
        )
    </insert>

    <!-- index="index" open="(" separator="),("  close=")" -->
    <insert id="createOrderDetail" parameterType="java.util.List"> 
        INSERT into `tbl_order_detail` (
            order_id,
            menu_id,
            number_served,
            amount,
            total_amount,
            customer_id,
            shop_id
        )
        VALUES (

            <foreach collection="list" item="orders" separator="),("> 
                #{orders.orderId},
                #{orders.menuId},
                #{orders.numberServed},
                #{orders.amount},
                #{orders.totalAmount},
                #{orders.customerId},
                #{orders.shopId}
            </foreach>
        )
    </insert>

    <insert id="createPayment" parameterType="hashmap"> 
        INSERT into `tbl_payment` (
            amount,
            paid_by,
            processed_by,
            order_id
        )
        VALUES (
                #{amount},
                #{paidBy},
                #{processedBy},
                #{orderId}
        )
    </insert>

    <delete id="clearCart" parameterType="int">
        DELETE from `tbl_cart_item` where user_id = #{userId}
    </delete>

    <delete id="deleteOrder" parameterType="int">
        DELETE from `tbl_order` where order_id = #{orderId}
    </delete>

    <select id="getOrderList" parameterType="map" resultType="com.dom.food.order.models.OrderListModel">
        select 
            o.order_id as orderId,
            o.customer_id as customerId,
            o.delivery_address as deliveryAddress,
            u.fullname as customerName,
            u.phone as customerPhone,
            u.email as customerEmail,
            od.menu_id as menuId,
            od.number_served as quantity,
            od.amount as amount,
            od.total_amount as totalAmount,
            od.delivered,
            m.name,
            m.image,
            o.create_at as createAt,
            o.update_at as updateAt
    
        from (((tbl_order_detail as od
        inner join tbl_order as o on od.order_id = o.order_id)
        inner join tbl_menu as m on od.menu_id = m.menu_id)
        inner join tbl_user as u on od.customer_id = u.user_id)
        <if test="shopId !=0 or userId!=0">where</if>
        <if test="shopId != 0"> od.shop_id = #{shopId}</if>
        <if test="shopId != 0 and userId !=0">and</if>
        <if test="userId != 0">od.customer_id = #{userId}</if>
        <!-- where od.shop_id = #{shopId} -->

    </select>

    <update id="confirmDelivered">
        update `tbl_order_detail`
            <set>delivered = true </set>
        where order_id = #{orderId}
    </update>

    <select id="checkOrderByDate" parameterType="map" resultType="boolean">
        SELECT  COUNT(*) as total from tbl_order_detail where create_at &lt; #{dateBefore} 
                                and create_at &gt;= #{dateAfter} 
                                and menu_id = ${menuId} 
                                and customer_id = #{userId}
    </select>

</mapper>